function Main.main 2
push constant 8001
push constant 16
push constant 1
neg
call Main.fillMemory 3
pop temp 0
push constant 8000
call Memory.peek 1
pop local 1
push local 1
call Main.convert 1
pop temp 0
push constant 0
return
function Main.convert 4
push argument 0
pop local 2
(Main. L1)
push local 2
not
if-goto Main. L2
push local 1
push constant 1
add
pop local 1
push local 0
call Main.nextMask 1
pop local 0
push constant 9000
push local 1
add
push local 0
call Memory.poke 2
pop temp 0
push local 1
push constant 16
gt
not
not
if-goto Main. L1
push argument 0
push local 0
and
push constant 0
eq
not
not
if-goto Main. L1
push constant 8000
push local 1
add
push constant 1
call Memory.poke 2
pop temp 0
goto Main. L2
(Main. L1)
push constant 8000
push local 1
add
push constant 0
call Memory.poke 2
pop temp 0
(Main.L2)
goto Main. L2
(Main. L1)
pop local 2
(Main.L2)
goto Main. L1
(Main. L2)
push constant 0
return
function Main.nextMask 0
push argument 0
push argument 0
push constant 0
eq
not
if-goto Main.nextMask L1
goto Main.nextMask L2
(Main.nextMask L1)
(Main.nextMaskL2)
function Main.fillMemory 0
push argument 0
push argument 1
push argument 2
(Main.fillMemory L1)
push argument 1
push constant 0
gt
not
if-goto Main.fillMemory L2
push argument 0
push argument 2
call Memory.poke 2
pop temp 0
push argument 1
push constant 1
sub
pop argument 1
push argument 0
push constant 1
add
pop argument 0
goto Main.fillMemory L1
(Main.fillMemory L2)
push constant 0
return
